services:
  app:
    build: .
    container_name: retail-system-app
    ports:
      - "8080:8080"
    environment:
      # Database connection for containerized environment
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=261010
      # JWT configuration
      - JWT_SECRET=mySecretKey12345678901234567890123456789012345678901234567890
      - JWT_EXPIRATION=86400
      # Server configuration
      - SERVER_ADDRESS=0.0.0.0
    depends_on:
      db:
        condition: service_healthy
    networks:
      - db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/public/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    container_name: postgres-spring-boot
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 261010
      POSTGRES_DB: postgres
      PGDATA: /data/postgres
    volumes:
      - db:/data/postgres
    ports:
      - "5332:5432"
    networks:
      - db
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  
networks:
  db:
    driver: bridge

volumes:
  db: